{"ast":null,"code":"var _jsxFileName = \"/Users/mario/Documents/workspace/react-course/usepopcorn/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport StarRating from \"./components/StarRating\";\n// import './index.css';\n// import App from './App';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [movieRating, setMovieRating] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StarRating, {\n      color: \"blue\",\n      onSetRating: setMovieRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This movie was rated \", movieRating, \" stars\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Test, \"UDzFpymyOAf98ThAzTB/e1LmjUE=\");\n_c = Test;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(StarRating, {\n    maxRating: 5,\n    messages: [\"Terrible\", \"Bad\", \"Okay\", \"Good\", \"Amazing\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n    maxRating: 5,\n    size: \"24\",\n    color: \"red\",\n    defaultRating: 2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","ReactDOM","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","movieRating","setMovieRating","children","color","onSetRating","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","StrictMode","maxRating","messages","size","defaultRating","$RefreshReg$"],"sources":["/Users/mario/Documents/workspace/react-course/usepopcorn/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport StarRating from \"./components/StarRating\";\n// import './index.css';\n// import App from './App';\n\nfunction Test() {\n  const [movieRating, setMovieRating] = useState(0);\n  return (\n    <>\n      <StarRating color=\"blue\" onSetRating={setMovieRating} />\n      <p>This movie was rated {movieRating} stars</p>\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <StarRating\n      maxRating={5}\n      messages={[\"Terrible\", \"Bad\", \"Okay\", \"Good\", \"Amazing\"]}\n    />\n    <StarRating maxRating={5} size={\"24\"} color=\"red\" defaultRating={2} />\n    <Test />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,oBACEI,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACF,UAAU;MAACU,KAAK,EAAC,MAAM;MAACC,WAAW,EAAEH;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDb,OAAA;MAAAO,QAAA,GAAG,uBAAqB,EAACF,WAAW,EAAC,QAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC/C,CAAC;AAEP;AAACT,EAAA,CARQD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAUb,MAAMY,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTnB,OAAA,CAACL,KAAK,CAACyB,UAAU;EAAAb,QAAA,gBAEfP,OAAA,CAACF,UAAU;IACTuB,SAAS,EAAE,CAAE;IACbC,QAAQ,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS;EAAE;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC,eACFb,OAAA,CAACF,UAAU;IAACuB,SAAS,EAAE,CAAE;IAACE,IAAI,EAAE,IAAK;IAACf,KAAK,EAAC,KAAK;IAACgB,aAAa,EAAE;EAAE;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtEb,OAAA,CAACG,IAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACpB,CAAC;;AAED;AACA;AACA;AAAA,IAAAC,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}